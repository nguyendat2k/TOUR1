
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <!-- Bootstrap CSS -->
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,600&display=swap" rel="stylesheet">
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css'>
    <link rel="stylesheet" href="style.css">

    <!--------FONT------>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" />
    <style>
        body {
        }
        /* menu */
        #menu {
            padding-left: 30px;
            box-shadow: 2px 2px 7px;
            height: 100px;
            color: black;
            margin-bottom: unset;
            font-size: 10px;
        }

        #link:hover {
            box-shadow: 0 3px #808080;
            transition: 0.4s;
        }

        .navbar-nav > li > a {
            padding-top: 15px;
            padding-bottom: 15px;
            color: black;
        }
        /* Hiệu ứng menu */
        .menu {
            position: relative;
            display: inline-block;
        }

        .nav-link {
            color: white;
            font-weight: bold;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: #fdfdfd;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }
            /* Liên kết bên trong danh sách thả xuống */
            .dropdown-menu a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }
                /* Thay đổi định dạng của liên kết thả xuống khi di chuột qua */
                .dropdown-menu a:hover {
                    background-color: #ffffff;
                    color: rgb(124, 107, 107);
                }
        /* Hiển thị menu thả xuống khi di chuột */
        .dropdown:hover .dropdown-menu {
            display: block;
        }

        #logo {
            margin-top: -20px;
        }

        .a {
            padding-top: 15px;
            color: gray;
            text-decoration: none;
            cursor: pointer;
            font-size: 15px;
            padding-left: 1.8em
        }

            .a:hover {
                box-shadow: 0 3px #808080;
                transition: 0.4s;
                text-decoration: none;
                color: black;
            }

        li.format-hello {
            padding-top: 15px;
            color: white;
        }

        .multisteps-form__progress {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
        }

        .multisteps-form__progress-btn {
            transition-property: all;
            transition-duration: 0.15s;
            transition-timing-function: linear;
            transition-delay: 0s;
            position: relative;
            padding-top: 20px;
            color: rgba(108, 117, 125, 0.7);
            text-indent: -9999px;
            border: none;
            background-color: transparent;
            outline: none !important;
            cursor: pointer;
        }

            .multisteps-form__progress-btn:before {
                position: absolute;
                top: 0;
                left: 50%;
                display: block;
                width: 13px;
                height: 13px;
                content: '';
                -webkit-transform: translateX(-50%);
                transform: translateX(-50%);
                transition: all 0.15s linear 0s, -webkit-transform 0.15s cubic-bezier(0.05, 1.09, 0.16, 1.4) 0s;
                transition: all 0.15s linear 0s, transform 0.15s cubic-bezier(0.05, 1.09, 0.16, 1.4) 0s;
                transition: all 0.15s linear 0s, transform 0.15s cubic-bezier(0.05, 1.09, 0.16, 1.4) 0s, -webkit-transform 0.15s cubic-bezier(0.05, 1.09, 0.16, 1.4) 0s;
                border: 2px solid currentColor;
                border-radius: 50%;
                background-color: #fff;
                box-sizing: border-box;
                z-index: 3;
            }

            .multisteps-form__progress-btn:after {
                position: absolute;
                top: 5px;
                left: calc(-50% - 13px / 2);
                transition-property: all;
                transition-duration: 0.15s;
                transition-timing-function: linear;
                transition-delay: 0s;
                display: block;
                width: 100%;
                height: 2px;
                content: '';
                background-color: currentColor;
                z-index: 1;
            }

            .multisteps-form__progress-btn:first-child:after {
                display: none;
            }

            .multisteps-form__progress-btn.js-active {
                color: #007bff;
            }

                .multisteps-form__progress-btn.js-active:before {
                    -webkit-transform: translateX(-50%) scale(1.2);
                    transform: translateX(-50%) scale(1.2);
                    background-color: currentColor;
                }

        .multisteps-form__form {
            position: relative;
        }

        .multisteps-form__panel {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 0;
            opacity: 0;
            visibility: hidden;
        }

            .multisteps-form__panel.js-active {
                height: auto;
                opacity: 1;
                visibility: visible;
            }

            .multisteps-form__panel[data-animation="scaleOut"] {
                -webkit-transform: scale(1.1);
                transform: scale(1.1);
            }

                .multisteps-form__panel[data-animation="scaleOut"].js-active {
                    transition-property: all;
                    transition-duration: 0.2s;
                    transition-timing-function: linear;
                    transition-delay: 0s;
                    -webkit-transform: scale(1);
                    transform: scale(1);
                }

            .multisteps-form__panel[data-animation="slideHorz"] {
                left: 50px;
            }

                .multisteps-form__panel[data-animation="slideHorz"].js-active {
                    transition-property: all;
                    transition-duration: 0.25s;
                    transition-timing-function: cubic-bezier(0.2, 1.13, 0.38, 1.43);
                    transition-delay: 0s;
                    left: 0;
                }

            .multisteps-form__panel[data-animation="slideVert"] {
                top: 30px;
            }

                .multisteps-form__panel[data-animation="slideVert"].js-active {
                    transition-property: all;
                    transition-duration: 0.2s;
                    transition-timing-function: linear;
                    transition-delay: 0s;
                    top: 0;
                }

            .multisteps-form__panel[data-animation="fadeIn"].js-active {
                transition-property: all;
                transition-duration: 0.3s;
                transition-timing-function: linear;
                transition-delay: 0s;
            }

            .multisteps-form__panel[data-animation="scaleIn"] {
                -webkit-transform: scale(0.9);
                transform: scale(0.9);
            }

                .multisteps-form__panel[data-animation="scaleIn"].js-active {
                    transition-property: all;
                    transition-duration: 0.2s;
                    transition-timing-function: linear;
                    transition-delay: 0s;
                    -webkit-transform: scale(1);
                    transform: scale(1);
                }
    </style>
</head>
<body>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <!--MENU--->
    <nav id="menu" class="navbar navbar-expand-lg navbar-light bg-light sticky-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="trangchu.html">
                <img id="logo" src="/images/VTRAVEL.png" width="100" height="100">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link is-active" id="link" aria-current="page" href="@Url.Action("Index","TOUR")">&emsp;&emsp; TRANG CHỦ&emsp;&emsp;</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="link" href="#">&emsp;&emsp;GIỚI THIỆU &emsp;&emsp; </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="link" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            DU LỊCH
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#">TRONG NƯỚC</a>
                            <a class="dropdown-item" href="#">NGOÀI NƯỚC</a>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="link" href="#"> &emsp;&emsp; KHÁCH SẠN &emsp;&emsp; </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="link" href="#">&emsp;&emsp;TIN TỨC &emsp;&emsp; </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="link" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            VẬN CHUYỂN
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#">MÁY BAY</a>
                            <a class="dropdown-item" href="#">XE</a>
                        </div>
                    </li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <img src="@Url.Content("~/Images/cart.jpg")" style="height:30px;width:30px;margin-top:10px;" />
                        @Html.Action("BagCart", "ShoppingCart")
                    </li>
                    <li class="format-hello">
                        @if (Session["UserName"] != null)
                        {
                        <li><p style="color:blue;font-weight:bold;margin-top:15px;"> Xin Chào @Session["UserName"]</p></li>
                        <li>@Html.ActionLink("ĐĂNG XUẤT", "DangXuat", "ACCOUNT")</li>
                    }
                    else
                    {
                        <li><p style="color:blue;font-weight:bold;margin-top:15px;"> Xin Chào </p></li>
                        <li>@Html.ActionLink("ĐĂNG KÝ", "DangKy", "ACCOUNT")</li>
                        <li>@Html.ActionLink("ĐĂNG NHẬP", "Index", "ACCOUNT")</li>
                    }
                        </li>

                    </ul>
                </div>
            </div>
            <span class="nav-indicator"></span>
        </nav>
        <header class="header">
            <h1 class="header__title">Các Thủ Tục Để Thanh Toán</h1>
        </header>
        <div class="content">
            <div class="content__inner">
                <div class="container">



                </div>
                <div class="container overflow-hidden">
                    <div class="multisteps-form">
                        <div class="row">
                            <div class="col-12 col-lg-8 ml-auto mr-auto mb-4">
                                <div class="multisteps-form__progress">
                                    <button class="multisteps-form__progress-btn js-active" type="button" title="Số Lượng Khách">Chọn Dịch Vụ</button>
                                    <button class="multisteps-form__progress-btn" type="button" title="Thông Tin Khách">Thông Tin Khách Hàng</button>
                                    <button class="multisteps-form__progress-btn" type="button" title="Thanh Toán Hóa Đơn">Thanh Toán</button>
                                    <button class="multisteps-form__progress-btn" type="button" title="Xác Nhận Hóa Đơn">Xác Nhận</button>
                                </div>
                            </div>
                        </div>
                        <div>
                            @RenderBody()
                        </div>
                        <script>
                            const DOMstrings = {
                                stepsBtnClass: 'multisteps-form__progress-btn',
                                stepsBtns: document.querySelectorAll(`.multisteps-form__progress-btn`),
                                stepsBar: document.querySelector('.multisteps-form__progress'),
                                stepsForm: document.querySelector('.multisteps-form__form'),
                                stepsFormTextareas: document.querySelectorAll('.multisteps-form__textarea'),
                                stepFormPanelClass: 'multisteps-form__panel',
                                stepFormPanels: document.querySelectorAll('.multisteps-form__panel'),
                                stepPrevBtnClass: 'js-btn-prev',
                                stepNextBtnClass: 'js-btn-next'
                            };


                            const removeClasses = (elemSet, className) => {

                                elemSet.forEach(elem => {

                                    elem.classList.remove(className);

                                });

                            };

                            const findParent = (elem, parentClass) => {

                                let currentNode = elem;

                                while (!currentNode.classList.contains(parentClass)) {
                                    currentNode = currentNode.parentNode;
                                }

                                return currentNode;

                            };

                            const getActiveStep = elem => {
                                return Array.from(DOMstrings.stepsBtns).indexOf(elem);
                            };

                            const setActiveStep = activeStepNum => {

                                removeClasses(DOMstrings.stepsBtns, 'js-active');

                                DOMstrings.stepsBtns.forEach((elem, index) => {

                                    if (index <= activeStepNum) {
                                        elem.classList.add('js-active');
                                    }

                                });
                            };

                            const getActivePanel = () => {

                                let activePanel;

                                DOMstrings.stepFormPanels.forEach(elem => {

                                    if (elem.classList.contains('js-active')) {

                                        activePanel = elem;

                                    }

                                });

                                return activePanel;

                            };

                            const setActivePanel = activePanelNum => {

                                removeClasses(DOMstrings.stepFormPanels, 'js-active');

                                DOMstrings.stepFormPanels.forEach((elem, index) => {
                                    if (index === activePanelNum) {

                                        elem.classList.add('js-active');

                                        setFormHeight(elem);

                                    }
                                });

                            };

                            const formHeight = activePanel => {

                                const activePanelHeight = activePanel.offsetHeight;

                                DOMstrings.stepsForm.style.height = `${activePanelHeight}px`;

                            };

                            const setFormHeight = () => {
                                const activePanel = getActivePanel();

                                formHeight(activePanel);
                            };

                            DOMstrings.stepsBar.addEventListener('click', e => {

                                const eventTarget = e.target;

                                if (!eventTarget.classList.contains(`${DOMstrings.stepsBtnClass}`)) {
                                    return;
                                }

                                const activeStep = getActiveStep(eventTarget);

                                setActiveStep(activeStep);

                                setActivePanel(activeStep);
                            });

                            DOMstrings.stepsForm.addEventListener('click', e => {

                                const eventTarget = e.target;

                                if (!(eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`) || eventTarget.classList.contains(`${DOMstrings.stepNextBtnClass}`))) {
                                    return;
                                }

                                const activePanel = findParent(eventTarget, `${DOMstrings.stepFormPanelClass}`);

                                let activePanelNum = Array.from(DOMstrings.stepFormPanels).indexOf(activePanel);

                                if (eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`)) {
                                    activePanelNum--;

                                } else {

                                    activePanelNum++;

                                }

                                setActiveStep(activePanelNum);
                                setActivePanel(activePanelNum);

                            });

                            window.addEventListener('load', setFormHeight, false);

                            window.addEventListener('resize', setFormHeight, false);


                            const setAnimationType = newType => {
                                DOMstrings.stepFormPanels.forEach(elem => {
                                    elem.dataset.animation = newType;
                                });
                            };

                            //changing animation
                            const animationSelect = document.querySelector('.pick-animation__select');

                            animationSelect.addEventListener('change', () => {
                                const newAnimationType = animationSelect.value;

                                setAnimationType(newAnimationType);
                            });

                        </script>

    </body>
</html>




